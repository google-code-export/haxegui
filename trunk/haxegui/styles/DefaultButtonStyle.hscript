this.graphics.clear ();

var colors = this.disabled ? colors =
  [this.color - 0x141414, this.color] :[this.color | 0x323232,
					this.color - 0x141414];
var alphas =[100, 100];
var ratios =[0, 0xFF];
var matrix = new flash.geom.Matrix ();

matrix.createGradientBox (this.box.width, this.box.height, Math.PI / 2, 0, 0);

this.graphics.lineStyle (1,
			 flash.display.LineScaleMode.NONE,
			 flash.display.CapsStyle.ROUND,
			 flash.display.JointStyle.ROUND);

this.graphics.lineGradientStyle (flash.display.GradientType.LINEAR,
				 [this.color, this.color - 0x202020], alphas,
				 ratios, matrix);
this.graphics.beginGradientFill (flash.display.GradientType.LINEAR, colors,
				 alphas, ratios, matrix);
this.graphics.drawRoundRect (0, 0, this.box.width, this.box.height, 8, 8);
this.graphics.endFill ();

var fmt =
  DefaultStyle.getTextFormat (8, DefaultStyle.LABEL_TEXT,
			      flash.text.TextFormatAlign.LEFT);
if (this.disabled)
  fmt.color = this.color - 0x202020;
this.label.tf.setTextFormat (fmt);

if (this.filters.length == 0)
  {
    var shadow =
      new flash.filters.DropShadowFilter (this.disabled ? 2 : 4, 45,
					  DefaultStyle.DROPSHADOW,
					  this.disabled ? 0.2 : 0.5,
					  4, 4, 0.5,
					  flash.filters.BitmapFilterQuality.
					  HIGH,
					  false, false, false);
    this.filters =[shadow];
  }

if (this.label != null)
  {
    this.label.moveTo (Math.floor (.5 * (this.box.width - this.label.width)),
		       Math.floor (.5 *
				   (this.box.height - this.label.height)));
  }

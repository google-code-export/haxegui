this.graphics.clear();

/* Label */
if(this.label!=null) {

	var fmt = DefaultStyle.getTextFormat();
	if( this.disabled )
	{
		fmt.color = this.color - 0x202020;

		var shadow = new flash.filters.DropShadowFilter(
				4, 45, DefaultStyle.DROPSHADOW,
				0.2, 4, 4, 0.65,
				flash.filters.BitmapFilterQuality.HIGH,
				true, false, false );
		this.filters = [shadow];
	}

		this.label.tf.setTextFormat(fmt);
}


this.graphics.lineStyle (1,
	Math.max(0, Math.min(0xFFFFFF, this.color - 0x282828)),
	2, true, 
	flash.display.LineScaleMode.NONE,
	flash.display.CapsStyle.ROUND,
	flash.display.JointStyle.ROUND
	);
	
/* CheckMark */	
if(this.checked) {
	var colors = [ this.color | 0x323232, this.color - 0x141414 ];
	var alphas = [ 100, 100 ];
	var ratios = [ 0, 0xFF ];
	var matrix = new flash.geom.Matrix();
	matrix.createGradientBox(this.box.width, this.box.height, Math.PI/2, 0, 0);
	this.graphics.beginGradientFill( flash.display.GradientType.LINEAR, colors, alphas, ratios, matrix );
	this.graphics.drawRoundRect (0, 0, this.box.width, this.box.height, 8, 8 );
	this.graphics.endFill();

	var colors = [ Math.max(0, this.color - 0x4D4D4D), Math.max(0, this.color - 0x191919) ] ;
	var alphas =[100, 100];
	var ratios =[0, 0xFF];
	var matrix = new flash.geom.Matrix ();
	matrix.createGradientBox (this.box.width, this.box.height, Math.PI / 2, 0, 0);

	var w = this.box.width / 4;
	this.graphics.lineStyle(w);
	this.graphics.lineGradientStyle (flash.display.GradientType.LINEAR, colors, alphas, ratios, matrix);

	this.graphics.moveTo (w, w);
	this.graphics.lineTo (this.box.width - w, this.box.height - w);
	this.graphics.moveTo (this.box.width - w, w);
	this.graphics.lineTo (w, this.box.height - w);


}
/** Box **/
else {
	var colors = [ this.color - 0x141414, this.color | 0x323232 ];
	var alphas = [ 100, 100 ];
	var ratios = [ 0, 0xFF ];
	var matrix = new flash.geom.Matrix();
	matrix.createGradientBox(this.box.width, this.box.height, Math.PI/2, 0, 0);
	this.graphics.beginGradientFill( flash.display.GradientType.LINEAR, colors, alphas, ratios, matrix );
	this.graphics.drawRoundRect (0, 0, this.box.width, this.box.height, 8, 8 );
	this.graphics.endFill();
}




/* Inner-Drop-Shadow */
if (this.filters.length == 0) {
    var shadow =
      new flash.filters.DropShadowFilter (this.disabled ? 2 : 4, 45,
					  DefaultStyle.DROPSHADOW,
					  this.disabled ? 0.2 : 0.5,
					  4, 4, 0.5,
					  flash.filters.BitmapFilterQuality.
					  HIGH,
					  true, false, false);
    this.filters =[shadow];
}

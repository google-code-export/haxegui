this.graphics.clear();

/* Label */
if(this.label!=null) {
	var fmt = DefaultStyle.getTextFormat();
	if( this.disabled ) {
		fmt.color = Color.darken(this.color, 16);
		this.filters = [new flash.filters.DropShadowFilter(4, 45, DefaultStyle.DROPSHADOW, 0.2, 4, 4, 0.65, flash.filters.BitmapFilterQuality.HIGH, true, false, false )];
	}
	this.label.tf.setTextFormat(fmt);
}

this.graphics.lineStyle (1, Color.darken(this.color, 16), 2, true, flash.display.LineScaleMode.NONE, flash.display.CapsStyle.NONE, flash.display.JointStyle.ROUND);

/* CheckMark */	
if(this.selected) {
	var colors = [ Color.tint(this.color, .8), Color.darken(this.color, 8) ];
	var matrix = new flash.geom.Matrix();
	matrix.createGradientBox(this.box.width, this.box.height, .5*Math.PI, 0, 0);
	this.graphics.beginGradientFill( flash.display.GradientType.LINEAR, colors, [1, 1], [0, 0xFF], matrix );
	this.graphics.drawRoundRect (0, 0, this.box.width, this.box.height, 8, 8 );
	this.graphics.endFill();
	
	var colors = [ Color.darken(this.color, 80), Color.darken(this.color, 50) ] ;
	var matrix = new flash.geom.Matrix ();
	matrix.createGradientBox (this.box.width, this.box.height, .5*Math.PI, 0, 0);
	
	var w = this.box.width / 4;
	this.graphics.lineStyle(w);
	this.graphics.lineGradientStyle (flash.display.GradientType.LINEAR, colors, [1, 1], [0, 0xFF], matrix);
	
	this.graphics.moveTo (w, w);
	this.graphics.lineTo (this.box.width - w, this.box.height - w);
	this.graphics.moveTo (this.box.width - w, w);
	this.graphics.lineTo (w, this.box.height - w);
}
/** Box **/
else {
	var colors = [ Color.darken(this.color, 8), Color.tint(this.color, .8) ];
	var matrix = new flash.geom.Matrix();
	matrix.createGradientBox(this.box.width, this.box.height, .5*Math.PI, 0, 0);
	this.graphics.beginGradientFill( flash.display.GradientType.LINEAR, colors, [1, 1], [0, 0xFF], matrix );
	this.graphics.drawRoundRect (0, 0, this.box.width, this.box.height, 8, 8 );
	this.graphics.endFill();
}

/* Inner-Drop-Shadow */
this.filters = [new flash.filters.DropShadowFilter (this.disabled ? 0 : 1, 45, DefaultStyle.DROPSHADOW, this.disabled ? 0.2 : 0.5, 2, 2, 0.5, flash.filters.BitmapFilterQuality.LOW, true, false, false)];


var h = this.parent.box.height + 1;
var w = h;

this.graphics.clear();

/************* Button ********************/
var colors = [ Utils.tint(this.color, .8), Utils.darken(this.color, 8) ];
var alphas = [ 100, 100 ];
var ratios = [ 0, 0xFF ];
var matrix = new flash.geom.Matrix();
matrix.createGradientBox(w, h, .5*Math.PI, 0, 0);

this.graphics.lineStyle (1,
	Utils.darken(DefaultStyle.BACKGROUND, 16),
	1, true, 
	flash.display.LineScaleMode.NONE,
	flash.display.CapsStyle.ROUND,
	flash.display.JointStyle.ROUND
	);


/***************** Arrow *****************************/
if(parent.disabled)
	colors = [ this.color, Utils.darken(this.color, 8) ];
this.graphics.beginGradientFill( flash.display.GradientType.LINEAR, colors, alphas, ratios, matrix );
this.graphics.drawRoundRectComplex(0, 1, w, h-1, 0, 4, 0, 4 );
this.graphics.endFill ();

if(parent.disabled)
	this.graphics.lineStyle (1, Utils.darken(this.color, 10) );
else
	this.graphics.lineStyle (1, Utils.darken(this.color, 20) );

colors = [Utils.darken(this.color, 8),  Utils.darken(this.color, 20) ];

if(parent.disabled)
	colors = [ this.color, Utils.darken(this.color, 8) ];
	
matrix.createGradientBox(.5*w, .5*h, .5*Math.PI, 7.5, 7.5);
this.graphics.beginGradientFill( flash.display.GradientType.LINEAR, colors, alphas, [0, 0x66], matrix );
this.graphics.moveTo(7.5,7.5);
this.graphics.lineTo(w-7.5, 7.5);
this.graphics.lineTo(.5*w, h-7.5);
this.graphics.endFill ();

this.moveTo( parent.box.width - w, -1 );

/* Drop-Shadow */
var shadow =
  new flash.filters.DropShadowFilter (this.disabled ? 1 : 2, 45,
				      DefaultStyle.DROPSHADOW,
				      this.disabled ? 0.2 : 0.5,
				      2, 2, 0.35,
				      flash.filters.BitmapFilterQuality.HIGH,
				      false, false, false);
this.filters =[shadow];

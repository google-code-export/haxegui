var r = .5*Math.min( this.box.width, this.box.height );

this.graphics.clear();

var colors = [ Utils.tint(this.color, .8), Utils.clamp(this.color - 0x141414) ];
var alphas = [ 100, 100 ];
var ratios = [ 0, 0xFF ];
var matrix = new flash.geom.Matrix();
matrix.createGradientBox(this.box.width, this.box.height, .5*Math.PI, 0, 0);

if(this.selected)
{

	ratios = [ 0x66, 0xFF ];
	colors = [ Utils.tint(this.color, .8), Math.max(0, this.color - 0x333333) ];

	this.graphics.lineStyle (1, this.color - 0x141414, 1, true,
			 flash.display.LineScaleMode.NONE,
			 flash.display.CapsStyle.ROUND,
			 flash.display.JointStyle.ROUND);
	
	this.graphics.beginGradientFill( flash.display.GradientType.LINEAR, colors, alphas, ratios, matrix );
	this.graphics.drawCircle (r, r, r);
	this.graphics.endFill ();

	this.graphics.lineStyle(0,0,0);
	this.graphics.beginFill(0, this.disabled ? .5 : 1 );
	this.graphics.drawCircle (r, r, .5*r);
	this.graphics.endFill ();


}
else
{
	this.graphics.lineStyle (1, Math.max(0, this.color - 0x141414), 1, true,
			 flash.display.LineScaleMode.NONE,
			 flash.display.CapsStyle.ROUND,
			 flash.display.JointStyle.ROUND);
			 
	this.graphics.beginGradientFill( flash.display.GradientType.LINEAR, colors, alphas, ratios, matrix );
	this.graphics.drawCircle (r, r, r);
	this.graphics.endFill ();


}

if(this.disabled) {
	var fmt = DefaultStyle.getTextFormat();
	fmt.color = DefaultStyle.BACKGROUND - 0x141414;
	this.label.tf.setTextFormat(fmt);
}
//~ else
//~ {
	//~ var shadow = new flash.filters.DropShadowFilter (1, 45, DefaultStyle.DROPSHADOW, 0.8, 2, 2, 0.65, flash.filters.BitmapFilterQuality.LOW, true, false, false );
	//~ this.filters = [shadow];
//~ }


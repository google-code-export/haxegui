this.graphics.clear ();

function toGrayscaleHex(value)
{
    return ( value << 16 | value << 8 | value );
}

var highlight = Utils.tint(this.color,.85);
//var mid = Utils.clamp(this.color - toGrayscaleHex(10));
var mid = Utils.tint(this.color,.95);

var colors = this.disabled ? 
  [this.color, highlight, mid, this.color] :
  [this.color, highlight, mid, this.color];
var alphas =[100, 100, 100, 100];
var ratios =[0, 0x70, 0xD0, 0xFF];
var matrix = new flash.geom.Matrix ();

matrix.createGradientBox (this.box.width, this.box.height, .5*Math.PI, 0, 0);


this.graphics.lineStyle (1, Math.max(0, this.color - toGrayscaleHex(30)), 1, true,
			 flash.display.LineScaleMode.NONE,
			 flash.display.CapsStyle.ROUND,
			 flash.display.JointStyle.ROUND);
/*
this.graphics.lineGradientStyle (flash.display.GradientType.LINEAR,
				 [this.color - toGrayscaleHex(20), this.color - toGrayscaleHex(40)], alphas,
				 ratios, matrix);
*/				 
this.graphics.beginGradientFill (flash.display.GradientType.LINEAR, colors,
				 alphas, ratios, matrix);
this.graphics.drawRoundRect (0, 0, this.box.width, this.box.height, 8, 8);
this.graphics.endFill ();

/* Label text, position and formating */
if(this.label!=null)
{
var fmt =
  DefaultStyle.getTextFormat (8, DefaultStyle.LABEL_TEXT,
			      flash.text.TextFormatAlign.LEFT);
if (this.disabled)
  fmt.color = Utils.clamp(this.color - 0x202020);
this.label.tf.setTextFormat (fmt);

this.label.moveTo (Math.floor (.5 * (this.box.width - this.label.width)),
		   Math.floor (.5 * (this.box.height - this.label.height)));
}

/* Drop-Shadow */
var shadow =
  new flash.filters.DropShadowFilter (this.disabled ? 2 : 4, 45,
				      DefaultStyle.DROPSHADOW,
				      this.disabled ? 0.2 : 0.5,
				      4, 4, 0.5,
				      flash.filters.BitmapFilterQuality.HIGH,
				      false, false, false);
this.filters =[shadow];
